{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./sources/ext/undo.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","gantt","config","undo_steps","undo","redo","this","_undo","getUndoStack","_undoStack","getRedoStack","_redoStack","clearUndoStack","clearRedoStack","undo_types","link","task","undo_actions","update","remove","add","move","maxSteps","undo_enabled","redo_enabled","_push","stack","action","commands","length","event","callEvent","push","shift","_pop","pop","updateConfigs","_applyAction","invert","copy","command","entities","entity","actions","type","methods","isExists","batchUpdate","method","check","oldValue","parent","$index","id","index","logAction","slice","revert","inverseCommands","load","clear","assert","monitor","_batchAction","_batchMode","_ignore","_ignoreMoveEvents","isMoveEventsIgnored","toggleIgnoreMoveEvents","newValue","startIgnore","stopIgnore","startBatchAction","timeout","clearTimeout","setTimeout","stopBatchAction","_storeCommand","_storeEntityCommand","obj","old","actionType","entityType","_storeTaskCommand","getInitialTask","_storeLinkCommand","getInitialLink","onTaskAdded","onTaskUpdated","onTaskMoved","onTaskDeleted","_nestedTasks","children","_nestedLinks","childrenLinks","onLinkAdded","onLinkUpdated","onLinkDeleted","_initialTasks","_getLinks","$source","concat","$target","setNestedTasks","taskIds","tasks","linkIds","getTask","setInitialTask","uniqueLinks","links","setInitialLink","getTaskIndex","setInitialTaskObject","_initialLinks","getLink","noTrack","onBeforeUndo","onBeforeRedo","attachEvent","batchActions","store","nested","eachTask","datastore","getDatastore","getMoveObjectByTaskId","getParent","updTask","oldId","newId","changeTaskCommandId","updLink","oldTaskId","newTaskId","source","target","changeLinkCommandId","updateTasksIds","log","entry","j","updateLinksIds","tindex","initialObject","newObject","e"],"mappings":"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","file":"ext/dhtmlxgantt_undo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/codebase/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 180);\n","gantt.config.undo_steps = 10;\r\ngantt.config.undo = true;\r\ngantt.config.redo = true;\r\n\r\ngantt.undo = function(){\r\n\tthis._undo.undo();\r\n};\r\n\r\ngantt.getUndoStack = function(){\r\n\treturn this._undo._undoStack;\r\n};\r\n\r\ngantt.getRedoStack = function(){\r\n\treturn this._undo._redoStack;\r\n};\r\n\r\ngantt.clearUndoStack = function(){\r\n\tthis._undo._undoStack = [];\r\n};\r\n\r\ngantt.clearRedoStack = function(){\r\n\tthis._undo._redoStack = [];\r\n};\r\n\r\ngantt.redo = function(){\r\n\tthis._undo.redo();\r\n};\r\n\r\n/**\r\n * entities that require different processing for undoing-redoing changes\r\n * @type {{link: string, task: string}}\r\n */\r\ngantt.config.undo_types = {\r\n\tlink: \"link\",\r\n\ttask: \"task\"\r\n};\r\n\r\n/**\r\n * types of traced actions\r\n * @type {{update: string, remove: string, add: string}}\r\n */\r\ngantt.config.undo_actions = {\r\n\tupdate: \"update\",\r\n\tremove: \"remove\", // remove item from datastore\r\n\tadd: \"add\",\r\n\tmove: \"move\" // move task in grid\r\n};\r\n\r\ngantt._undo = {\r\n\t_undoStack:[],\r\n\t_redoStack:[],\r\n\tmaxSteps:10,\r\n\tundo_enabled: true,\r\n\tredo_enabled: true,\r\n\t_push: function(stack, action){\r\n\t\tif(!action.commands.length)\r\n\t\t\treturn;\r\n\r\n\t\tvar event = stack === this._undoStack ? \"onBeforeUndoStack\" : \"onBeforeRedoStack\";\r\n\t\tif(gantt.callEvent(event, [action]) === false){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// commands can be removed from event handler\r\n\t\tif(!action.commands.length)\r\n\t\t\treturn;\r\n\r\n\t\tstack.push(action);\r\n\t\twhile(stack.length > this.maxSteps){\r\n\t\t\tstack.shift();\r\n\t\t}\r\n\t\treturn action;\r\n\t},\r\n\t_pop:function(stack){\r\n\t\treturn stack.pop();\r\n\t},\r\n\r\n\tundo:function(){\r\n\t\tthis.updateConfigs();\r\n\t\tif(!this.undo_enabled)\r\n\t\t\treturn;\r\n\r\n\t\tvar action = this._pop(this._undoStack);\r\n\t\tif(gantt.callEvent(\"onBeforeUndo\", [action]) !== false){\r\n\t\t\tif(action){\r\n\r\n\t\t\t\tthis._applyAction(this.action.invert(action));\r\n\t\t\t\tthis._push(this._redoStack, gantt.copy(action));\r\n\t\t\t\tgantt.callEvent(\"onAfterUndo\", [action]);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\t\tgantt.callEvent(\"onAfterUndo\", [null]);\r\n\t},\r\n\r\n\tredo:function(){\r\n\t\tthis.updateConfigs();\r\n\t\tif(!this.redo_enabled)\r\n\t\t\treturn;\r\n\r\n\t\tvar action = this._pop(this._redoStack);\r\n\t\t\tif(gantt.callEvent(\"onBeforeRedo\", [action]) !== false){\r\n\t\t\t\tif(action){\r\n\t\t\t\t\tthis._applyAction(action);\r\n\t\t\t\t\tthis._push(this._undoStack, gantt.copy(action));\r\n\t\t\t\t\tgantt.callEvent(\"onAfterRedo\", [action]);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t}\r\n\t\tgantt.callEvent(\"onAfterRedo\", [null]);\r\n\t},\r\n\r\n\t_applyAction:function(action){\r\n\t\tvar command = null,\r\n\t\t\tentities = this.command.entity,\r\n\t\t\tactions = this.command.type;\r\n\r\n\t\tvar methods = {};\r\n\t\tmethods[entities.task] = {\r\n\t\t\tadd: \"addTask\",\r\n\t\t\tupdate: \"updateTask\",\r\n\t\t\tremove: \"deleteTask\",\r\n\t\t\tmove: \"moveTask\",\r\n\t\t\tisExists: \"isTaskExists\"\r\n\t\t};\r\n\t\tmethods[entities.link] = {\r\n\t\t\tadd: \"addLink\",\r\n\t\t\tupdate: \"updateLink\",\r\n\t\t\tremove: \"deleteLink\",\r\n\t\t\tisExists: \"isLinkExists\"\r\n\t\t};\r\n\r\n\t\tgantt.batchUpdate(function() {\r\n\t\t\tfor (var i = 0; i < action.commands.length; i++) {\r\n\t\t\t\tcommand = action.commands[i];\r\n\t\t\t\tvar method = methods[command.entity][command.type],\r\n\t\t\t\t\tcheck = methods[command.entity][\"isExists\"];\r\n\r\n\t\t\t\tif (command.type == actions.add) {\r\n\t\t\t\t\tgantt[method](command.oldValue, command.oldValue.parent, command.oldValue.$index);\r\n\t\t\t\t} else if (command.type == actions.remove) {\r\n\t\t\t\t\tif (gantt[check](command.value.id))\r\n\t\t\t\t\t\tgantt[method](command.value.id);\r\n\t\t\t\t} else if (command.type == actions.update) {\r\n\t\t\t\t\tgantt[method](command.value.id, command.value);\r\n\t\t\t\t} else if (command.type == actions.move) {\r\n\t\t\t\t\tgantt[method](command.value.id, command.value.index, command.value.parent);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t},\r\n\r\n\t//storeUndo:\r\n\tlogAction: function(action){\r\n\t\tthis._push(this._undoStack, action);\r\n\t\tthis._redoStack = [];\r\n\t},\r\n\r\n\taction: {\r\n\t\tcreate: function(commands){\r\n\t\t\treturn {commands: commands ? commands.slice() : []};\r\n\t\t},\r\n\t\tinvert: function(action){\r\n\t\t\tvar revert = gantt.copy(action);\r\n\t\t\tvar commands = gantt._undo.command;\r\n\r\n\t\t\tfor(var i = 0; i < action.commands.length; i++){\r\n\t\t\t\tvar command = revert.commands[i] = commands.invert(revert.commands[i]);\r\n\t\t\t\tif(command.type == commands.type.update || command.type == commands.type.move){\r\n\t\t\t\t\tvar value = command.value;\r\n\t\t\t\t\tcommand.value = command.oldValue;\r\n\t\t\t\t\tcommand.oldValue = value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn revert;\r\n\t\t}\r\n\t},\r\n\r\n\tcommand:{\r\n\t\tcreate: function(value, oldValue, type, entity){\r\n\t\t\treturn {\r\n\t\t\t\tentity:entity,\r\n\t\t\t\ttype:type,\r\n\t\t\t\tvalue:gantt.copy(value),\r\n\t\t\t\toldValue:gantt.copy(oldValue || value)\r\n\t\t\t};\r\n\t\t},\r\n\t\tinvert: function(command){\r\n\t\t\tvar revert = gantt.copy(command);\r\n\t\t\trevert.type = this.inverseCommands(command.type);\r\n\t\t\treturn revert;\r\n\t\t},\r\n\t\t// entities that require different processing for undoing-redoing changes\r\n\t\tentity:null,\r\n\r\n\t\t//types of traced actions\r\n\t\ttype:null,\r\n\t\tinverseCommands:function(command){\r\n\t\t\tswitch (command){\r\n\t\t\t\tcase this.type.update:\r\n\t\t\t\t\treturn this.type.update;\r\n\t\t\t\tcase this.type.remove:\r\n\t\t\t\t\treturn this.type.add;\r\n\t\t\t\tcase this.type.add:\r\n\t\t\t\t\treturn this.type.remove;\r\n\t\t\t\tcase this.type.load:\r\n\t\t\t\t\treturn this.type.clear;\r\n\t\t\t\tcase this.type.clear:\r\n\t\t\t\t\treturn this.type.load;\r\n\t\t\t\tcase this.type.move:\r\n\t\t\t\t\treturn this.type.move;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tgantt.assert(false, \"Invalid command \"+ command);\r\n\t\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\tmonitor: {\r\n\t\t_batchAction: null,\r\n\t\t_batchMode: false,\r\n\t\t_ignore: false,\r\n\t\t_ignoreMoveEvents: false,\r\n\t\tisMoveEventsIgnored: function() {\r\n\t\t\treturn this._ignoreMoveEvents;\r\n\t\t},\r\n\t\ttoggleIgnoreMoveEvents: function(newValue) {\r\n\t\t\tthis._ignoreMoveEvents = newValue || false;\r\n\t\t},\r\n\t\tstartIgnore: function(){\r\n\t\t\tthis._ignore = true;\r\n\t\t},\r\n\t\tstopIgnore: function(){\r\n\t\t\tthis._ignore = false;\r\n\t\t},\r\n\t\tstartBatchAction : function(){\r\n\t\t\t// try catching updates made from event handlers using timeout\r\n\t\t\tif(this.timeout){\r\n\t\t\t\tclearTimeout(this.timeout);\r\n\t\t\t}\r\n\t\t\tthis.timeout = setTimeout(function(){\r\n\t\t\t\tgantt._undo.monitor.stopBatchAction();\r\n\t\t\t}, 10);\r\n\r\n\r\n\t\t\tif(this._ignore || this._batchMode)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tthis._batchMode = true;\r\n\t\t\tthis._batchAction = gantt._undo.action.create();\r\n\t\t},\r\n\t\tstopBatchAction: function(){\r\n\t\t\tif(this._ignore)\r\n\t\t\t\treturn;\r\n\t\t\tvar undo = gantt._undo;\r\n\t\t\tif(this._batchAction){\r\n\t\t\t\tundo.logAction(this._batchAction);\r\n\t\t\t}\r\n\t\t\tthis._batchMode = false;\r\n\t\t\tthis._batchAction = null;\r\n\t\t},\r\n\r\n\t\t_storeCommand: function(command){\r\n\t\t\tvar undo = gantt._undo;\r\n\t\t\tundo.updateConfigs();\r\n\r\n\t\t\tif(!undo.undo_enabled)\r\n\t\t\t\treturn;\r\n\r\n\t\t\tif(this._batchMode){\r\n\t\t\t\tthis._batchAction.commands.push(command);\r\n\t\t\t}else{\r\n\t\t\t\tvar action = undo.action.create([command]);\r\n\t\t\t\tundo.logAction(action);\r\n\t\t\t}\r\n\t\t},\r\n\t\t_storeEntityCommand: function(obj, old, actionType, entityType){\r\n\t\t\tvar undo = gantt._undo;\r\n\t\t\tvar command = undo.command.create(obj, old, actionType, entityType);\r\n\t\t\tthis._storeCommand(command);\r\n\t\t},\r\n\t\t_storeTaskCommand: function(obj, type){\r\n\t\t\tthis._storeEntityCommand(obj, this.getInitialTask(obj.id), type, gantt._undo.command.entity.task);\r\n\t\t},\r\n\t\t_storeLinkCommand: function(obj, type){\r\n\t\t\tthis._storeEntityCommand(obj, this.getInitialLink(obj.id), type, gantt._undo.command.entity.link);\r\n\t\t},\r\n\t\tonTaskAdded:function(task){\r\n\t\t\tif(!this._ignore)\r\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.add);\r\n\t\t},\r\n\t\tonTaskUpdated:function(task){\r\n\t\t\tif(!this._ignore)\r\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.update);\r\n\t\t},\r\n\t\tonTaskMoved: function(task){\r\n\t\t\tif (!this._ignore) {\r\n\t\t\t\tthis._storeEntityCommand(\r\n\t\t\t\t\ttask,\r\n\t\t\t\t\tthis.getInitialTask(task.id),\r\n\t\t\t\t\tgantt._undo.command.type.move,\r\n\t\t\t\t\tgantt._undo.command.entity.task\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t},\r\n\t\tonTaskDeleted: function(task){\r\n\t\t\tif(!this._ignore){\r\n\t\t\t\tthis._storeTaskCommand(task, gantt._undo.command.type.remove);\r\n\t\t\t\tif(this._nestedTasks[task.id]){\r\n\t\t\t\t\tvar children = this._nestedTasks[task.id];\r\n\t\t\t\t\tfor(var i = 0; i < children.length; i++){\r\n\t\t\t\t\t\tthis._storeTaskCommand(children[i], gantt._undo.command.type.remove);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(this._nestedLinks[task.id]){\r\n\t\t\t\t\tvar childrenLinks = this._nestedLinks[task.id];\r\n\t\t\t\t\tfor(var i = 0; i < childrenLinks.length; i++){\r\n\t\t\t\t\t\tthis._storeLinkCommand(childrenLinks[i], gantt._undo.command.type.remove);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tonLinkAdded: function(link){\r\n\t\t\tif(!this._ignore)\r\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.add);\r\n\t\t},\r\n\t\tonLinkUpdated: function(link){\r\n\t\t\tif(!this._ignore)\r\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.update);\r\n\t\t},\r\n\t\tonLinkDeleted: function(link){\r\n\t\t\tif(!this._ignore)\r\n\t\t\t\tthis._storeLinkCommand(link, gantt._undo.command.type.remove);\r\n\t\t},\r\n\t\t_initialTasks:{},\r\n\t\t_nestedTasks:{},\r\n\t\t_nestedLinks:{},\r\n\t\t_getLinks: function(task){\r\n\t\t\treturn task.$source.concat(task.$target);\r\n\t\t},\r\n\t\tsetNestedTasks: function(id, taskIds){\r\n\t\t\tvar task = null,\r\n\t\t\t\ttasks = [],\r\n\t\t\t\tlinkIds = this._getLinks(gantt.getTask(id));\r\n\r\n\t\t\tfor(var i = 0; i < taskIds.length; i++){\r\n\t\t\t\ttask = this.setInitialTask(taskIds[i]);\r\n\r\n\t\t\t\tlinkIds = linkIds.concat(this._getLinks(task));\r\n\r\n\r\n\t\t\t\ttasks.push(task);\r\n\t\t\t}\r\n\r\n\t\t\tvar uniqueLinks = {};\r\n\t\t\tfor(var i = 0; i < linkIds.length; i++){\r\n\t\t\t\tuniqueLinks[linkIds[i]] = true;\r\n\t\t\t}\r\n\t\t\tvar links = [];\r\n\t\t\tfor(var i in uniqueLinks){\r\n\t\t\t\tlinks.push(this.setInitialLink(i));\r\n\t\t\t}\r\n\t\t\tthis._nestedTasks[id] = tasks;\r\n\t\t\tthis._nestedLinks[id] = links;\r\n\t\t},\r\n\t\tsetInitialTask: function(id){\r\n\t\t\tif (!this._initialTasks[id] || !this._batchMode) {\r\n\t\t\t\tvar task = gantt.copy(gantt.getTask(id));\r\n\t\t\t\ttask.$index = gantt.getTaskIndex(id);\r\n\t\t\t\tthis.setInitialTaskObject(id, task);\r\n\t\t\t}\r\n\t\t\treturn this._initialTasks[id];\r\n\t\t},\r\n\t\tgetInitialTask: function(id){\r\n\t\t\treturn this._initialTasks[id];\r\n\t\t},\r\n\t\tsetInitialTaskObject: function(id, object) {\r\n\t\t\tthis._initialTasks[id] = object;\r\n\t\t},\r\n\r\n\t\t_initialLinks:{},\r\n\t\tsetInitialLink: function(id){\r\n\t\t\tif(!this._initialLinks[id] || !this._batchMode)\r\n\t\t\t\tthis._initialLinks[id] = gantt.copy(gantt.getLink(id));\r\n\r\n\t\t\treturn this._initialLinks[id];\r\n\t\t},\r\n\t\tgetInitialLink: function(id){\r\n\t\t\treturn this._initialLinks[id];\r\n\t\t}\r\n\t}\r\n\r\n\r\n};\r\ngantt._undo.updateConfigs = function(){\r\n\tgantt._undo.maxSteps = gantt.config.undo_steps;\r\n\tgantt._undo.command.entity = gantt.config.undo_types;\r\n\tgantt._undo.command.type = gantt.config.undo_actions;\r\n\tgantt._undo.undo_enabled = !!gantt.config.undo;\r\n\tgantt._undo.redo_enabled = (!!gantt.config.undo) && (!!gantt.config.redo);\r\n};\r\n\r\n\r\n(function(){\r\n\r\n\tvar monitor = gantt._undo.monitor;\r\n\r\n\tvar noTrack = {\r\n\t\t\"onBeforeUndo\":\"onAfterUndo\",\r\n\t\t\"onBeforeRedo\": \"onAfterRedo\"\r\n\t};\r\n\tfor(var i in noTrack){\r\n\t\tgantt.attachEvent(i, function(){\r\n\t\t\tmonitor.startIgnore();\r\n\t\t});\r\n\t\tgantt.attachEvent(noTrack[i], function(){\r\n\t\t\tmonitor.stopIgnore();\r\n\t\t});\r\n\t}\r\n\r\n\tvar batchActions = [\r\n\t\t\"onTaskDragStart\",\r\n\t\t\"onAfterTaskDelete\",\r\n\t\t\"onBeforeBatchUpdate\"\r\n\t];\r\n\r\n\tfor(var i  = 0; i < batchActions.length; i++){\r\n\t\tgantt.attachEvent(batchActions[i], function(){\r\n\t\t\tmonitor.startBatchAction();\r\n\t\t});\r\n\t}\r\n\tfunction store(id){\r\n\t\tmonitor.setInitialTask(id);\r\n\t\treturn true;\r\n\t}\r\n\r\n\tgantt.attachEvent(\"onBeforeTaskDrag\", store);\r\n\tgantt.attachEvent(\"onLightbox\", store);\r\n\tgantt.attachEvent(\"onBeforeTaskAutoSchedule\", function(task){ store(task.id);  return true;});\r\n\tgantt.attachEvent(\"onBeforeTaskDelete\", function(id){\r\n\t\tstore(id);\r\n\t\tvar nested = [];\r\n\t\tgantt.eachTask(function(task){\r\n\t\t\tnested.push(task.id);\r\n\t\t}, id);\r\n\t\tmonitor.setNestedTasks(id, nested);\r\n\t\treturn true;\r\n\t});\r\n\r\n\tgantt.attachEvent(\"onAfterTaskAdd\", function(id, task){\r\n\t\tmonitor.onTaskAdded(task);\r\n\t});\r\n\tgantt.attachEvent(\"onAfterTaskUpdate\", function(id, task){\r\n\t\tmonitor.onTaskUpdated(task);\r\n\t});\r\n\tgantt.attachEvent(\"onAfterTaskDelete\", function(id, task){\r\n\t\tmonitor.onTaskDeleted(task);\r\n\t});\r\n\r\n\tgantt.attachEvent(\"onAfterLinkAdd\", function(id, task){\r\n\t\tmonitor.onLinkAdded(task);\r\n\t});\r\n\tgantt.attachEvent(\"onAfterLinkUpdate\", function(id, task){\r\n\t\tmonitor.onLinkUpdated(task);\r\n\t});\r\n\tgantt.attachEvent(\"onAfterLinkDelete\", function(id, task){\r\n\t\tmonitor.onLinkDeleted(task);\r\n\t});\r\n\r\n\tvar datastore = gantt.getDatastore(\"task\");\r\n\r\n\tdatastore.attachEvent(\"onBeforeItemMove\", function(id, parent, tindex){\r\n\t\tif (!monitor.isMoveEventsIgnored()) {\r\n\t\t\tvar initialObject = getMoveObjectByTaskId(id);\r\n\r\n\t\t\tmonitor.setInitialTaskObject(id, initialObject);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\r\n\tdatastore.attachEvent(\"onAfterItemMove\", function(id, parent, tindex){\r\n\t\tif (!monitor.isMoveEventsIgnored()) {\r\n\t\t\tvar newObject = getMoveObjectByTaskId(id);\r\n\t\t\tmonitor.onTaskMoved(newObject);\r\n\t\t\treturn true;\r\n\t\t}\r\n\t});\r\n\r\n\tgantt.attachEvent(\"onRowDragStart\", function(id, target, e) {\r\n\t\tvar initialObject = getMoveObjectByTaskId(id);\r\n\r\n\t\tmonitor.toggleIgnoreMoveEvents(true);\r\n\t\tmonitor.setInitialTaskObject(id, initialObject);\r\n\t\treturn true;\r\n\t});\r\n\t\r\n\tgantt.attachEvent(\"onRowDragEnd\", function(id, target) {\r\n\t\tvar newObject = getMoveObjectByTaskId(id);\r\n\r\n\t\tmonitor.onTaskMoved(newObject);\r\n\t\tmonitor.toggleIgnoreMoveEvents();\r\n\t\treturn true;\r\n\t});\r\n\r\n\tfunction getMoveObjectByTaskId(id) {\r\n\t\treturn {\r\n\t\t\tid: id,\r\n\t\t\tindex: gantt.getTaskIndex(id),\r\n\t\t\tparent: gantt.getParent(id)\r\n\t\t};\t\r\n\t}\r\n\r\n\tfunction updTask(task, oldId, newId){\r\n\t\tif(!task) return;\r\n\r\n\t\tif(task.id == oldId){\r\n\t\t\ttask.id = newId;\r\n\t\t}\r\n\r\n\t\tif(task.parent == oldId){\r\n\t\t\ttask.parent = newId;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction changeTaskCommandId(command, oldId, newId){\r\n\t\tupdTask(command.value, oldId, newId);\r\n\t\tupdTask(command.oldValue, oldId, newId);\r\n\t}\r\n\r\n\tfunction updLink(link, oldTaskId, newTaskId){\r\n\t\tif(!link) return;\r\n\t\tif(link.source == oldTaskId){\r\n\t\t\tlink.source = newTaskId;\r\n\t\t}\r\n\t\tif(link.target == oldTaskId){\r\n\t\t\tlink.target = newTaskId;\r\n\t\t}\r\n\t}\r\n\r\n\tfunction changeLinkCommandId(command, oldId, newId){\r\n\t\tupdLink(command.value, oldId, newId);\r\n\t\tupdLink(command.oldValue, oldId, newId);\r\n\t}\r\n\r\n\tfunction updateTasksIds(log, oldId, newId) {\r\n\t\tvar undo = gantt._undo;\r\n\r\n\t\tfor (var i = 0; i < log.length; i++) {\r\n\t\t\tvar entry = log[i];\r\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\r\n\t\t\t\tif (entry.commands[j].entity == undo.command.entity.task) {\r\n\t\t\t\t\tchangeTaskCommandId(entry.commands[j], oldId, newId);\r\n\t\t\t\t} else if (entry.commands[j].entity == undo.command.entity.link) {\r\n\t\t\t\t\tchangeLinkCommandId(entry.commands[j], oldId, newId);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction updateLinksIds(log, oldId, newId){\r\n\t\tvar undo = gantt._undo;\r\n\r\n\t\tfor (var i = 0; i < log.length; i++) {\r\n\t\t\tvar entry = log[i];\r\n\t\t\tfor (var j = 0; j < entry.commands.length; j++) {\r\n\t\t\t\tvar command = entry.commands[j];\r\n\t\t\t\tif (command.entity == undo.command.entity.link) {\r\n\t\t\t\t\tif(command.value && command.value.id == oldId){\r\n\t\t\t\t\t\tcommand.value.id = newId;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(command.oldValue && command.oldValue.id == oldId){\r\n\t\t\t\t\t\tcommand.oldValue.id = newId;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tgantt.attachEvent(\"onTaskIdChange\", function(oldId, newId){\r\n\t\tvar undo = gantt._undo;\r\n\t\tupdateTasksIds(undo._undoStack,oldId, newId);\r\n\t\tupdateTasksIds(undo._redoStack,oldId, newId);\r\n\t});\r\n\tgantt.attachEvent(\"onLinkIdChange\", function(oldId, newId){\r\n\t\tvar undo = gantt._undo;\r\n\t\tupdateLinksIds(undo._undoStack,oldId, newId);\r\n\t\tupdateLinksIds(undo._redoStack,oldId, newId);\r\n\t});\r\n\tgantt.attachEvent(\"onGanttReady\", function(){\r\n\t\tgantt._undo.updateConfigs();\r\n\t});\r\n})();\r\n"],"sourceRoot":""}